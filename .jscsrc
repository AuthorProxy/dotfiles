// Licensed by MIT
// Copyright (c) 2017 Alex Kostyukov
// https://github.com/AuthorProxy/dotfiles

{
  // Version 3.0.7
  // Rules: http://jscs.info/rules
  // Releases: https://github.com/jscs-dev/node-jscs/releases/
  // Sources: https://gist.github.com/AuthorProxy/bffb5f9aa733e3ca6279#file-jscsrc

  // All rules are presented explicitly (except contradictory) and ordered the same as on http://jscs.info/rules

  "disallowArrayDestructuringReturn": true,
  "disallowCapitalizedComments": true,
  "disallowDanglingUnderscores": {
    "allExcept": ["_jQuery", "_this"]
  },
  "disallowEmptyBlocks": {
    "allExcept": ["comments"]
  },
  "disallowIdenticalDestructuringNames": true,
  "disallowImplicitTypeConversion": ["binary"],
  "disallowKeywordsInComments": "\\b(todo|fix|fixme)\\b",
  "disallowKeywordsOnNewLine": ["else", "catch"],
  "disallowKeywords": ["with"],
  "disallowMixedSpacesAndTabs": true,
  "disallowMultipleLineBreaks": true,
  "disallowMultipleLineStrings": true,
  "disallowMultipleSpaces": true,
  "disallowMultipleVarDecl": {
    "allExcept": [
      "undefined"
    ]
  },
  "disallowNestedTernaries": true,
  "disallowNewlineBeforeBlockStatements": true,
  "disallowNodeTypes": ["LabeledStatement"],
  "disallowOperatorBeforeLineBreak": ["+", "."],
  "disallowPaddingNewlinesInBlocks": true,
  "disallowParenthesesAroundArrowParam": true,
  "disallowQuotedKeysInObjects": true,
  "disallowSpaceAfterObjectKeys": {
    "allExcept": [ "aligned" ]
  },
  "disallowSpaceAfterPrefixUnaryOperators": true,
  "disallowSpaceBeforeComma": true,
  "disallowSpaceBeforePostfixUnaryOperators": true,
  "disallowSpaceBeforeSemicolon": true,
  "disallowSpacesInAnonymousFunctionExpression": {
    "beforeOpeningRoundBrace": true
  },
  "disallowSpacesInCallExpression": true,
  "disallowSpacesInFunctionDeclaration": {
    "beforeOpeningRoundBrace": true
  },
  "disallowSpacesInFunctionExpression": {
    "beforeOpeningRoundBrace": true
  },
  "disallowSpacesInFunction": {
    "beforeOpeningRoundBrace": true
  },
  "disallowSpacesInGenerator": {
    "beforeStar": true
  },
  "disallowSpacesInNamedFunctionExpression": {
    "beforeOpeningRoundBrace": true
  },
  "disallowSpacesInsideArrayBrackets": true,
  "disallowSpacesInsideParentheses": true,
  "disallowSpacesInsideParenthesizedExpression": true,
  "disallowSpacesInsideTemplateStringPlaceholders": true,
  "disallowTabs": true,
  "disallowTrailingComma": true,
  "disallowTrailingWhitespace": true,
  "disallowUnusedParams": true,
  "disallowUnusedVariables": true,
  "disallowVar": true, // ES6
  "disallowYodaConditions": true,
  "maximumLineLength": {
    "value": 120,
    "tabSize": 2,
    "allowRegex": true,
    "allowUrlComments": true
  },
  "maximumNumberOfLines": {
    "value": 300,
    "allExcept": ["comments"]
  },
  "requireAlignedMultilineParams": true,
  "requireAnonymousFunctions": {
    "allExcept": ["declarations"]
  },
  "requireArrayDestructuring": true, // ES6
  "requireBlocksOnNewline": {
     "includeComments": true
  },
  "requireCamelCaseOrUpperCaseIdentifiers": true,
  "requireCapitalizedConstructorsNew": true,
  "requireCapitalizedConstructors": true,
  "requireCommaBeforeLineBreak": true,
  "requireCurlyBraces": {
    "allExcept": ["return", "continue", "break"],
    "keywords": [
      "if",
      "else",
      "for",
      "while",
      "do",
      "try",
      "catch"
    ]
  },
  "requireDollarBeforejQueryAssignment": true,
  "requireDotNotation": true,
  "requireEarlyReturn": true,
  "requireEnhancedObjectLiterals": true, // ES6
  "requireFunctionDeclarations": true,
  "requireImportAlphabetized": true,
  "requireLineBreakAfterVariableAssignment": true,
  "requireLineFeedAtFileEnd": true,
  "requireMatchingFunctionName": {
    "includeModuleExports": true
  },
  "requireNewlineBeforeSingleStatementsInIf": true,
  "requireNumericLiterals": true, // ES6
  "requireObjectDestructuring": true, // ES6
  "requireObjectKeysOnNewLine": {
    "allExcept": ["sameLine"]
  },
  "requirePaddingNewLineAfterVariableDeclaration": true, // todo: request { "allExcept": singleVar } option
  "requirePaddingNewLinesBeforeExport": true,
  "requirePaddingNewLinesAfterBlocks": {
      "allExcept": [
        "inCallExpressions",
        "inNewExpressions",
        "inArrayExpressions",
        "inProperties"
      ]
  },
  "requirePaddingNewLinesAfterUseStrict": true,
  "requirePaddingNewlinesBeforeKeywords": ["try", "do"],
  "requirePaddingNewLinesBeforeLineComments": {
    "allExcept": "firstAfterCurly" // todo: VS2015 warning
  },
  "requireParenthesesAroundIIFE": true,
  "requireSemicolons": true,
  "requireShorthandArrowFunctions": true,
  "requireSpaceAfterBinaryOperators": true,
  "requireSpaceAfterComma": {
    "allExcept": ["sparseArrays"] // todo: VS2015 warning
  },
  "requireSpaceAfterKeywords": [
    "do",
    "for",
    "if",
    "else",
    "switch",
    "case",
    "try",
    "catch",
    "void",
    "while",
    "with",
    "return",
    "typeof"
  ],
  "requireSpaceAfterLineComment": true,
  "requireSpaceBeforeBinaryOperators": true,
  "requireSpaceBeforeBlockStatements": true,
  "requireSpaceBeforeDestructuredValues": true,
  "requireSpaceBeforeKeywords": [
    "else",
    "while",
    "catch"
  ],
  "requireSpaceBeforeObjectValues": true,
  "requireSpaceBetweenArguments": true,
  "requireSpacesInGenerator": {
    "afterStar": true
  },
  "requireSpacesInAnonymousFunctionExpression": {
    "beforeOpeningCurlyBrace": true
  },
  "requireSpacesInConditionalExpression": true,
  "requireSpacesInForStatement": true,
  "requireSpacesInFunctionDeclaration": {
    "beforeOpeningCurlyBrace": true
  },
  "requireSpacesInFunctionExpression": {
    "beforeOpeningCurlyBrace": true
  },
  "requireSpacesInFunction": {
    "beforeOpeningCurlyBrace": true
  },
  "requireSpacesInNamedFunctionExpression": {
    "beforeOpeningCurlyBrace": true
  },
  "requireSpacesInsideImportedObjectBraces": true,
  "requireSpacesInsideObjectBrackets": "allButNested",
  "requireSpread": true,
  "requireTemplateStrings": true, // ES6
  "requireUseStrict": true,
  "requireVarDeclFirst": true,
  "safeContextKeyword": "safe",
  "validateAlignedFunctionParameters": true,
  "validateCommentPosition": {
    "position": "above"
  },
  "validateIndentation": {
    "value": 2
  },
  "validateLineBreaks": {
    "character": "CRLF",
    "reportOncePerFile": true
  },
  "validateNewlineAfterArrayElements": true,
  "validateParameterSeparator": ", ",
  "validateQuoteMarks": {
    "mark": "'", // todo: VS2015 warning
    "escape": true,
    "ignoreJSX": true
  }
}
